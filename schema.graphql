type Query {
  # verifyOtp(verify: VerifyInput): Jwt
  getUser: User
  getInventoryItem(id: ID!, chefId:ID!): CartItem
  inventoryItems(family:String!): [InventoryItem]
  banner(id:ID!): Banner
  nearby(location:[Float]):[NearbyItem]
  fetchOrders(page:Float, pageSize:Float):[Order]
  getchef(id:ID!):Chef
  getItem(id:ID!): InventoryItem
}
type Mutation {
  # checkPhonenSend(phone: String!): UserWithOTP
  createORCheck:User
  saveAddress(addPayload:AddPayload!, id:ID):Address
  delAddr(id:ID!):User
  codcheckout(items: [CheckoutItem]!, address: CheckoutAddress!, total: Float!, dod:String!):Order
  setFCM(fcmToken:String!):Boolean
}
type Address {
  _id: ID,
  location: Location!
  building: String!
  area: String!
  pincode: String!
  landmark: String
  label: [String]!
}

type Location {
  type: String!
  coordinates: [Float!]!
}

type User {
  _id: ID!
  phone: String!
  name: String
  addresses: [Address]
  fcmToken: String
}

input VerifyInput {
  phone: String!
  otp: String!
  uid:String!
}
type Jwt {
  token: String!
}


type UserWithOTP {
  user: User
  otp: String
}


input AddPayload {
  coordinates: [Float!]!
  data: AddAddressData
}

input AddAddressData {
  building: String!
  area: String!
  landmark: String!
  label: String!
  pincode: String!
}

type Gallery {
  name: String
  url: String
  id: String
  route: String
  _id: ID
}

type InventoryItem {
  _id: ID!
  name: String!
  description: String
  enable: Boolean
  gallery: [Gallery]
  family: [String]
  tags: [String]
  category: [Category]
}

type Category {
  price: Float
  name: String
  _id: ID
}

type Banner {
  gallery: [Gallery]
  _id: ID!
}

type NearbyItem{
  displayname: String
  _id: ID
  distance:Float
  info:[InventoryItem]
}

type CartItem {
  info: InventoryItem
  chefId: ID
  enable: Boolean
}
type OrderItem{
  chefid:ID!
  pdtid:ID!
  catid:ID!
  _id:ID!
  quantity: Float!
}
type Order{
  address:Address
  customerid:ID!
  _id:ID!
  mode:String
  status:String
  total:Float
  dod:String
  items: [OrderItem]
  createdAt: String
}

input CheckoutItem {
  chefid:String
  pdtid:String
  catid:String
  quantity:Float
}

input GPS {
  coordinates: [Float!]!
  type: String
}

input CheckoutAddress {
  building: String!
  area: String!
  landmark: String!
  label: [String!]
  pincode: String!
  location: GPS
}

type Chef {
  _id: ID
  name: String!
  displayname: String!
  phone: String!
  location: Location
  address: chefAddress
  pincode: String!
}

type chefAddress {
  building: String!
  area: String!
  landmark: String!
}
